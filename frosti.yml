variables:
- name: ServiceConnection
  value: MyConnection 

jobs:
- job: InfraDeploy
  pool:
    vmImage: macOS-latest
  steps:
    - task: AzureCLI@2
      name: frosti
      displayName: Run frosti
      inputs:
        azureSubscription: '$(ServiceConnection)'
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          az --version
          az account show
          brew update
          brew install CirroBuild/tap/frosti
          $myAppName = frosti provision -e ppe | grep WebAppName | sed -e 's/WebAppName://g'
          Write-Host "##vso[task.setvariable variable=var01;isOutput=true]$myAppName"

- job: BuildProject
  pool:
    vmImage: macOS-latest
  steps:
    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: restore
        projects: FrostiDemo.csproj
    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        projects: FrostiDemo.csproj
        arguments: -c $(buildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: dotnet publish
      inputs:
        command: publish
        projects: FrostiDemo.csproj
        arguments: -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/publish
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: FrostiDemo'
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)/publish
        ArtifactName: FrostiDemo

- job: CodeDeploy
  dependsOn: 
  - InfraDeploy
  - BuildProject
  variables:
    myWebAppName: $[ dependencies.InfraDeploy.outputs['frosti.var01'] ] 
  pool:
    vmImage: macOS-latest
  steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'FrostiDemo'
        downloadPath: '$(System.DefaultWorkingDirectory)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '$(ServiceConnection)'
        appType: 'webAppLinux'
        WebAppName: '$(myWebAppName)'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'